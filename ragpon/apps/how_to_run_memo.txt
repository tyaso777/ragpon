# 1. Create images using Dockerfiles.

# 2. to run POSTGRES
   # For Windows Podman.
      ```powershell
         podman run -d `
         --name postgres `
         --network ragnet `
         -p 5432:5432 `
         -v "D:\Users\AtsushiSuzuki\OneDrive\デスクトップ\test\ragpon\ragpon\apps\postgres\initdb:/docker-entrypoint-initdb.d:Z" `
         -v postgres:/var/lib/postgresql/data `
         -e POSTGRES_DB=postgres `
         -e POSTGRES_USER=postgres `
         -e POSTGRES_PASSWORD=postgres123 `
         --restart=unless-stopped `
         docker.io/postgres:17.4
      ```
      or
      ```powershell
         podman start postgres
      ```

   # For WSL podman.
      ```powershell
         podman machine ssh
         podman run -d \
            --name postgres \
            --network ragnet \
            -p 5432:5432 \
            -v postgres:/var/lib/postgresql/data \
            -v /home/user/ragpon/ragpon/apps/postgres/initdb:/docker-entrypoint-initdb.d:Z \
            -e POSTGRES_DB=postgres \
            -e POSTGRES_USER=postgres \
            -e POSTGRES_PASSWORD=postgres123 \
            --restart=unless-stopped \
            docker.io/postgres:17.4
      ```

# 3. to run CHROMADB
   # For Windows Podman.
      ```powershell
         podman run -it --rm `
            --name chromadb `
            --network ragnet `
            -p 8007:8007 `
            -v "D:\Users\AtsushiSuzuki\OneDrive\デスクトップ\test\ragpon:/app:Z" `
            chroma-app
      ```

   # For WSL podman.
      ```powershell
         podman machine ssh
         podman run -it --rm \
            --name chromadb \
            --network ragnet \
            -p 8007:8007 \
            -v /home/user/ragpon:/app:Z \
            chroma-app
      ```

# 4. to run FASTAPI
   # For Windows Podman.
      ```powershell
         podman run -it --rm `
            --name ragpon-fastapi `
            --network ragnet `
            -v "D:\Users\AtsushiSuzuki\OneDrive\デスクトップ\test\ragpon:/app:Z" `
            --workdir /app `
            -e PYTHONPATH=/app `
            -e OPENAI_API_KEY=$Env:OPENAI_API_KEY `
            -e RAGPON_OTHER_LOG_LEVEL=WARNING `
            -e RAGPON_APP_LOG_LEVEL=DEBUG `
            -p 8006:8006 `
            ragpon-fastapi
      ```
      or
      ```powershell
         podman run -it --rm `
            --name ragpon-fastapi `
            --network ragnet `
            -v "D:\Users\AtsushiSuzuki\OneDrive\デスクトップ\test\ragpon:/app:Z" `
            --workdir /app `
            -e PYTHONPATH=/app `
            -e OPENAI_API_KEY=$Env:OPENAI_API_KEY `
            -e RAGPON_OTHER_LOG_LEVEL=WARNING `
            -e RAGPON_APP_LOG_LEVEL=DEBUG `
            -p 8006:8006 `
            ragpon-fastapi `
            bash -c "
               unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY && \
               uvicorn ragpon.apps.fastapi.fast_api_app:app \
                     --host 0.0.0.0 \
                     --port 8006 \
                     --workers 4
            "
      ```



   # For WSL podman.
      ```powershell
         podman machine ssh

         podman run -it --rm \
            --name ragpon-fastapi \
            --network ragnet \
            -v /home/user/ragpon:/app:Z \
            --workdir /app \
            -e PYTHONPATH=/app \
            -e OPENAI_API_KEY=$OPENAI_API_KEY \
            -e RAGPON_OTHER_LOG_LEVEL=WARNING \
            -e RAGPON_APP_LOG_LEVEL=DEBUG \
            -p 8006:8006 \
            ragpon-fastapi \
            bash -c "\
               # 1) clear any inherited proxy settings
               unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY && \
               # 2) configure Azure OpenAI
               export OPENAI_TYPE=azure && \
               export AZURE_OPENAI_ENDPOINT=https://~~~.com && \
               export AZURE_OPENAI_API_KEY=~~~ && \
               export AZURE_OPENAI_DEPLOYMENT=gpt-4o && \
               export AZURE_OPENAI_MODEL=2024-08-01-preview && \
               # 3) start the FastAPI app with Uvicorn
               uvicorn ragpon.apps.fastapi.fast_api_app:app \
               --host 0.0.0.0 \
               --port 8006 \
               --workers 4"
      ```

# 5. to run STREAMLIT
   # For Windows Podman.
      ```powershell
         podman run -it --rm `
            --name ragpon-streamlit `
            --network ragnet `
            -v "D:\Users\AtsushiSuzuki\OneDrive\デスクトップ\test\ragpon:/app:Z" `
            --workdir /app `
            -e PYTHONPATH=/app `
            -e OPENAI_API_KEY=$Env:OPENAI_API_KEY `
            -e STREAMLIT_CONFIG_FILE=/app/ragpon/ragpon/apps/streamlit/config.toml `
            -p 8005:8005 `
            ragpon-streamlit `
            bash -c "streamlit run ragpon/apps/streamlit/streamlit_app.py --server.port 8005 --server.address 0.0.0.0"
      ```

   # For WSL podman.
      ```powershell
         podman machine ssh
         podman run -it --rm \
            --name ragpon-streamlit \
            --network ragnet \
            -v /home/user/ragpon:/app:Z \
            --workdir /app \
            -e PYTHONPATH=/app \
            -e OPENAI_API_KEY=$OPENAI_API_KEY \
            -e STREAMLIT_CONFIG_FILE=/app/ragpon/ragpon/apps/streamlit/config.toml \
            -p 8005:8005 \
            ragpon-streamlit \
            bash -c "\
               unset http_proxy https_proxy HTTP_PROXY HTTPS_PROXY && \
               streamlit run ragpon/apps/streamlit/streamlit_app.py \
                  --server.port 8005 --server.address 0.0.0.0\
            "
      ```

# 6. to run Locust
   # For Windows Podman.
      ```
         podman run -it --rm `
            --name ragpon-locust `
            --network ragnet `
            -v "D:\Users\AtsushiSuzuki\OneDrive\デスクトップ\test\ragpon\ragpon\apps\locust:/mnt/locust:Z" `
            -p 8089:8089 `
            -w /mnt/locust `
            ragpon-locust `
            locust -f locustfile.py --host http://ragpon-fastapi:8006 --web-host 0.0.0.0
      ```
