digraph "classes_RagponUML" {
rankdir=BT
charset="utf-8"
"ragpon.chunk_processor.AbstractChunkProcessor" [color="black", fontcolor="black", label=<{AbstractChunkProcessor|<br ALIGN="LEFT"/>|<I>process</I>(text: str): list[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.AbstractDocumentProcessingPipeline" [color="black", fontcolor="black", label=<{AbstractDocumentProcessingPipeline|<br ALIGN="LEFT"/>|<I>process_document</I>(): tuple[list[str], list[TMetadata]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_reader.AbstractDocumentReader" [color="black", fontcolor="black", label=<{AbstractDocumentReader|filepath : str<br ALIGN="LEFT"/>|<I>read_document</I>(start_page_number: int): list[ChunkSourceInfo]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_reader.AbstractDocumentReaderFactory" [color="black", fontcolor="black", label=<{AbstractDocumentReaderFactory|<br ALIGN="LEFT"/>|<I>get_document_reader</I>(file_path: str): AbstractDocumentReader<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.embedding_model.AbstractEmbeddingModel" [color="black", fontcolor="black", label=<{AbstractEmbeddingModel|passage_prefix : str<br ALIGN="LEFT"/>query_prefix : str<br ALIGN="LEFT"/>|<I>embed_batch</I>(texts: list[str], use_prefix: str): list[list[float]]<br ALIGN="LEFT"/><I>embed_single</I>(text: str, use_prefix: str): list[list[float]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.large_language_model.AbstractLargeLanguageModel" [color="black", fontcolor="black", label=<{AbstractLargeLanguageModel|<br ALIGN="LEFT"/>|<I>generate</I>(text: str): str<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.metadata_generator.AbstractMetadataGenerator" [color="black", fontcolor="black", label=<{AbstractMetadataGenerator|metadata_class : Type[TMetadata]<br ALIGN="LEFT"/>|<I>generate</I>(): TMetadata<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.reranker.AbstractRelevanceEvaluator" [color="black", fontcolor="black", label=<{AbstractRelevanceEvaluator|<br ALIGN="LEFT"/>|<I>score_batch</I>(question: str, answers: list[str]): list[float]<br ALIGN="LEFT"/><I>score_single</I>(question: str, answer: str): list[float]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.abstract_repository.AbstractRepository" [color="black", fontcolor="black", label=<{AbstractRepository|metadata_class : Type[TMetadata]<br ALIGN="LEFT"/>result_class : Type[TResult]<br ALIGN="LEFT"/>|<I>delete_by_ids</I>(ids: list[str]): None<br ALIGN="LEFT"/><I>delete_by_metadata</I>(metadata: dict): None<br ALIGN="LEFT"/><I>enhance</I>(docs: TResult \| list[TResult], num_before: int, num_after: int): TResult \| list[TResult]<br ALIGN="LEFT"/><I>insert</I>(documents: list[str], metadatas: list[TMetadata]): None<br ALIGN="LEFT"/><I>search</I>(query: str, top_k: int): list[TResult]<br ALIGN="LEFT"/><I>upsert</I>(documents: list[str], metadatas: list[TMetadata]): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.search_results_formatter.AbstractResultsFormatter" [color="black", fontcolor="black", label=<{AbstractResultsFormatter|result_class : Type[TResult]<br ALIGN="LEFT"/>|<I>format</I>(results: T): list[TResult]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.embedding_model.AbstractSimilarityCalculator" [color="black", fontcolor="black", label=<{AbstractSimilarityCalculator|<br ALIGN="LEFT"/>|<I>calculate_similarity</I>(text0: str, text1: str): float<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.tokenizer.AbstractTokenizer" [color="black", fontcolor="black", label=<{AbstractTokenizer|<br ALIGN="LEFT"/>|<I>tokenize</I>(document: str): list[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.bm25.bm25_calculators.BM25PlusCalculator" [color="black", fontcolor="black", label=<{BM25PlusCalculator|<br ALIGN="LEFT"/>|search(query: str, top_k: int): list[TResult]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.bm25.bm25_repository.BM25Repository" [color="black", fontcolor="black", label=<{BM25Repository|<br ALIGN="LEFT"/>|delete_by_ids(ids: list[str]): None<br ALIGN="LEFT"/>delete_by_metadata(metadata: dict): None<br ALIGN="LEFT"/>enhance(docs: TResult \| list[TResult], num_before: int, num_after: int): TResult \| list[TResult]<br ALIGN="LEFT"/>insert(documents: list[str], metadatas: list[TMetadata]): None<br ALIGN="LEFT"/>search(query: str, top_k: int): list[TResult]<br ALIGN="LEFT"/>upsert(documents: list[str], metadatas: list[TMetadata]): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.domain.BaseDocument" [color="black", fontcolor="black", label=<{BaseDocument|db_name : str<br ALIGN="LEFT"/>distance : float<br ALIGN="LEFT"/>doc_id : str<br ALIGN="LEFT"/>metadata : dict[str, Any]<br ALIGN="LEFT"/>text : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.BaseDocumentModel" [color="black", fontcolor="black", label=<{BaseDocumentModel|id : CharField<br ALIGN="LEFT"/>length : IntegerField<br ALIGN="LEFT"/>text : TextField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.ml_models.embedding_model.ChromaDBEmbeddingAdapter" [color="black", fontcolor="black", label=<{ChromaDBEmbeddingAdapter|embedding_model<br ALIGN="LEFT"/>passage_prefix<br ALIGN="LEFT"/>query_prefix<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.chromaDB_repository.ChromaDBRepository" [color="black", fontcolor="black", label=<{ChromaDBRepository|batch_size : int<br ALIGN="LEFT"/>client : Client<br ALIGN="LEFT"/>collection : Collection<br ALIGN="LEFT"/>collection_name : str<br ALIGN="LEFT"/>connection_mode : str<br ALIGN="LEFT"/>embed_func<br ALIGN="LEFT"/>formatter<br ALIGN="LEFT"/>metadata_class : Type[TMetadata]<br ALIGN="LEFT"/>passage_prefix<br ALIGN="LEFT"/>query_prefix<br ALIGN="LEFT"/>result_class : Type[TResult]<br ALIGN="LEFT"/>similarity : str<br ALIGN="LEFT"/>|delete_by_ids(ids: list[str]): None<br ALIGN="LEFT"/>delete_by_metadata(metadata: dict): None<br ALIGN="LEFT"/>enhance(docs: TResult \| list[TResult], num_before: int, num_after: int): TResult \| list[TResult]<br ALIGN="LEFT"/>insert(documents: list[str], metadatas: list[TMetadata]): None<br ALIGN="LEFT"/>search(query: str, top_k: int, where: Optional[dict], query_embeddings: Optional[list]): list[TResult]<br ALIGN="LEFT"/>upsert(documents: list[str], metadatas: list[TMetadata]): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.search_results_formatter.ChromaDBResultsFormatter" [color="black", fontcolor="black", label=<{ChromaDBResultsFormatter|<br ALIGN="LEFT"/>|format(results: QueryResult): list[TResult]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.chunk_processor.ChunkProcessingError" [color="black", fontcolor="red", label=<{ChunkProcessingError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.domain.ChunkSourceInfo" [color="black", fontcolor="black", label=<{ChunkSourceInfo|metadata : dict[str, Any]<br ALIGN="LEFT"/>text : str<br ALIGN="LEFT"/>unit_index : int<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.config.config.Config" [color="black", fontcolor="black", label=<{Config|DEFAULTS : dict<br ALIGN="LEFT"/>config : NoneType<br ALIGN="LEFT"/>config_file : NoneType<br ALIGN="LEFT"/>encoding : str<br ALIGN="LEFT"/>|get(key: str, default: str \| None): str \| None<br ALIGN="LEFT"/>save(path: str \| Path \| None): None<br ALIGN="LEFT"/>set(key: str, value: str): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.chat.Message.Config" [color="black", fontcolor="black", label=<{Config|json_schema_extra : dict<br ALIGN="LEFT"/>populate_by_name : bool<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.ml_models.embedding_model.CosineSimilarityCalculator" [color="black", fontcolor="black", label=<{CosineSimilarityCalculator|embedding_model<br ALIGN="LEFT"/>|calculate_similarity(text0: str, text1: str, use_prefix0: str, use_prefix1: str): float<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.metadata_generator.CustomMetadataGenerator" [color="black", fontcolor="black", label=<{CustomMetadataGenerator|<br ALIGN="LEFT"/>|generate(): TMetadata<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.DataFrameDocumentProcessingPipeline" [color="black", fontcolor="black", label=<{DataFrameDocumentProcessingPipeline|chunk_col_name : str<br ALIGN="LEFT"/>id_col_name : str<br ALIGN="LEFT"/>metadata_generator : CustomMetadataGenerator[TMetadata]<br ALIGN="LEFT"/>|process_document(): tuple[list[str], list[TMetadata]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.DataFrameProcessingError" [color="black", fontcolor="red", label=<{DataFrameProcessingError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.DataModels" [color="black", fontcolor="black", label=<{DataModels|Document : Document<br ALIGN="LEFT"/>Statistics<br ALIGN="LEFT"/>Term<br ALIGN="LEFT"/>TermFrequency<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.service.document_processing_service.DatabaseFactory" [color="black", fontcolor="black", label=<{DatabaseFactory|<br ALIGN="LEFT"/>|create_bm25(): BM25Repository \| None<br ALIGN="LEFT"/>create_chroma_db(): ChromaDBRepository \| None<br ALIGN="LEFT"/>validate_configuration(): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.chat.DeleteRoundPayload" [color="black", fontcolor="black", label=<{DeleteRoundPayload|deleted_by : str<br ALIGN="LEFT"/>is_deleted : bool<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.domain.Document" [color="black", fontcolor="black", label=<{Document|base_document<br ALIGN="LEFT"/>enhanced_text : str \| None<br ALIGN="LEFT"/>rerank : float \| None<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.managers.DocumentManager" [color="black", fontcolor="black", label=<{DocumentManager|<br ALIGN="LEFT"/>|add_document(text: str, metadata: BaseDocument): None<br ALIGN="LEFT"/>remove_document(doc_id: str)<br ALIGN="LEFT"/>remove_document_by_metadata(metadata: dict[str, Any])<br ALIGN="LEFT"/>update_document(text: str, metadata: BaseDocument)<br ALIGN="LEFT"/>upsert_document(text: str, metadata: BaseDocument)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.DocumentProcessingError" [color="black", fontcolor="red", label=<{DocumentProcessingError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.service.document_processing_service.DocumentProcessingService" [color="black", fontcolor="black", label=<{DocumentProcessingService|<br ALIGN="LEFT"/>|convert_search_results_to_dataframe(search_results: dict[str, list[Document]]): pd.DataFrame<br ALIGN="LEFT"/>delete_by_ids(ids: list[str]): None<br ALIGN="LEFT"/>delete_by_metadata(metadata: dict[str, Any]): None<br ALIGN="LEFT"/>enhance_search_results(search_results: dict[str, list[Document]], num_before: int, num_after: int): dict[str, list[Document]]<br ALIGN="LEFT"/>process_dataframe(df: pd.DataFrame, chunk_col_name: str, id_col_name: str): None<br ALIGN="LEFT"/>process_file(file_path: str): None<br ALIGN="LEFT"/>rerank_results(query: str, search_results: dict[str, list[Document]], search_result_text_key: str): dict[str, list[Document]]<br ALIGN="LEFT"/>rerank_results_by_score_fusion(search_results: dict[str, list[Document]], alpha: float): dict[str, list[Document]]<br ALIGN="LEFT"/>search(query: str, top_k: int): dict[str, list[Document]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_reader.ExtensionBasedDocumentReaderFactory" [color="black", fontcolor="black", label=<{ExtensionBasedDocumentReaderFactory|<br ALIGN="LEFT"/>|get_document_reader(file_path: str): AbstractDocumentReader<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.FilePathDocumentProcessingPipeline" [color="black", fontcolor="black", label=<{FilePathDocumentProcessingPipeline|chunk_processor<br ALIGN="LEFT"/>metadata_generator : CustomMetadataGenerator[TMetadata]<br ALIGN="LEFT"/>|process_document(): tuple[list[str], list[TMetadata]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.FileProcessingError" [color="black", fontcolor="red", label=<{FileProcessingError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.chunk_processor.FixedLengthChunkProcessor" [color="black", fontcolor="black", label=<{FixedLengthChunkProcessor|chunk_size : int<br ALIGN="LEFT"/>|process(text: str): list[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_reader.HTMLReader" [color="black", fontcolor="black", label=<{HTMLReader|<br ALIGN="LEFT"/>|read_document(start_page_number: int): list[ChunkSourceInfo]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.bm25.managers.IndexManager" [color="black", fontcolor="black", label=<{IndexManager|<br ALIGN="LEFT"/>|update_statistics(words: list[str], add: bool): None<br ALIGN="LEFT"/>update_term_index(word: str, doc_id: str, count: int, remove: bool): None<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.chunk_processor.JAGinzaChunkProcessor" [color="black", fontcolor="black", label=<{JAGinzaChunkProcessor|chunk_size : int<br ALIGN="LEFT"/>nlp<br ALIGN="LEFT"/>|process(text: str): list[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.reranker.JapaneseRerankerCrossEncoderLargeV1Evaluator" [color="black", fontcolor="black", label=<{JapaneseRerankerCrossEncoderLargeV1Evaluator|model : CrossEncoder<br ALIGN="LEFT"/>|score_batch(question: str, answers: list[str]): list[float]<br ALIGN="LEFT"/>score_single(question: str, answer: str): list[float]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.chat.Message" [color="black", fontcolor="black", label=<{Message|content : str<br ALIGN="LEFT"/>id : str<br ALIGN="LEFT"/>is_deleted : bool<br ALIGN="LEFT"/>role<br ALIGN="LEFT"/>round_id : int<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.BaseDocumentModel.Meta" [color="black", fontcolor="black", label=<{Meta|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.create_statistics_model.Statistics.Meta" [color="black", fontcolor="black", label=<{Meta|database<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.create_term_model.Term.Meta" [color="black", fontcolor="black", label=<{Meta|database<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.create_term_frequency_model.TermFrequency.Meta" [color="black", fontcolor="black", label=<{Meta|database<br ALIGN="LEFT"/>indexes : tuple<br ALIGN="LEFT"/>primary_key : CompositeKey<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.MetadataGenerationError" [color="black", fontcolor="red", label=<{MetadataGenerationError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.ml_models.large_language_model.Mixtral8x7BInstructV01" [color="black", fontcolor="black", label=<{Mixtral8x7BInstructV01|model<br ALIGN="LEFT"/>model_generate_config : dict<br ALIGN="LEFT"/>quantization_config : BitsAndBytesConfig<br ALIGN="LEFT"/>tokenizer : PreTrainedTokenizerFast<br ALIGN="LEFT"/>|generate(text: str): str<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.embedding_model.MultilingualE5LargeEmbedder" [color="black", fontcolor="black", label=<{MultilingualE5LargeEmbedder|model<br ALIGN="LEFT"/>passage_prefix : str<br ALIGN="LEFT"/>query_prefix : str<br ALIGN="LEFT"/>tokenizer : PreTrainedTokenizerFast<br ALIGN="LEFT"/>|embed_batch(texts: list[str], use_prefix: str): list[list[float]]<br ALIGN="LEFT"/>embed_single(text: str, use_prefix: str): list[list[float]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.chunk_processor.NaturalChunkProcessor" [color="black", fontcolor="black", label=<{NaturalChunkProcessor|<br ALIGN="LEFT"/>|process(text: str): list[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_reader.PDFReaderPyMuPDF" [color="black", fontcolor="black", label=<{PDFReaderPyMuPDF|<br ALIGN="LEFT"/>|read_document(start_page_number: int): list[ChunkSourceInfo]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_reader.PDFReaderPyPDF" [color="black", fontcolor="black", label=<{PDFReaderPyPDF|<br ALIGN="LEFT"/>|read_document(start_page_number: int): list[ChunkSourceInfo]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.chat.PatchFeedbackPayload" [color="black", fontcolor="black", label=<{PatchFeedbackPayload|feedback : Literal['good', 'bad']<br ALIGN="LEFT"/>reason : str \| None<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.document_reader.PowerPointReader" [color="black", fontcolor="black", label=<{PowerPointReader|<br ALIGN="LEFT"/>|read_document(start_page_number: int): list[ChunkSourceInfo]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.config.proxy_configurator.ProxyConfigurator" [color="black", fontcolor="black", label=<{ProxyConfigurator|proxies : NoneType, dict<br ALIGN="LEFT"/>|get_proxies()<br ALIGN="LEFT"/>use_environment_variables()<br ALIGN="LEFT"/>use_getpass_credentials(proxy_url: str)<br ALIGN="LEFT"/>use_manual_credentials(username: str, password: str, proxy_url: str)<br ALIGN="LEFT"/>use_truststore()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.api.reranker_servers.reranker_api.create_app.RerankRequest" [color="black", fontcolor="black", label=<{RerankRequest|answers : list[str]<br ALIGN="LEFT"/>query : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.api.reranker_servers.reranker_balancer_api.create_app.RerankRequest" [color="black", fontcolor="black", label=<{RerankRequest|answers : List[str]<br ALIGN="LEFT"/>query : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.ml_models.reranker.Reranker" [color="black", fontcolor="black", label=<{Reranker|relevance_evaluator<br ALIGN="LEFT"/>|rerank(query: str, search_results: list[Document], search_result_text_key: str): list[Document]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.chat.RoleEnum" [color="black", fontcolor="black", label=<{RoleEnum|name<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.document_processing_pipeline.RowProcessingError" [color="black", fontcolor="red", label=<{RowProcessingError|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.ml_models.embedding_model.RuriLargeEmbedder" [color="black", fontcolor="black", label=<{RuriLargeEmbedder|model : SentenceTransformer<br ALIGN="LEFT"/>passage_prefix : str<br ALIGN="LEFT"/>query_prefix : str<br ALIGN="LEFT"/>|embed_batch(texts: list[str], use_prefix: str): list[list[float]]<br ALIGN="LEFT"/>embed_single(text: str, use_prefix: str): list[list[float]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.embedding_model.RuriLargeEmbedderCTranslate2" [color="black", fontcolor="black", label=<{RuriLargeEmbedderCTranslate2|model<br ALIGN="LEFT"/>passage_prefix : str<br ALIGN="LEFT"/>query_prefix : str<br ALIGN="LEFT"/>tokenizer : PreTrainedTokenizerFast<br ALIGN="LEFT"/>|embed_batch(texts: list[str], use_prefix: str): list[list[float]]<br ALIGN="LEFT"/>embed_single(text: str, use_prefix: str): list[list[float]]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.ml_models.reranker.RuriRerankerLargeEvaluator" [color="black", fontcolor="black", label=<{RuriRerankerLargeEvaluator|model : CrossEncoder<br ALIGN="LEFT"/>|score_batch(question: str, answers: list[str]): list[float]<br ALIGN="LEFT"/>score_single(question: str, answer: str): list[float]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.chat.SessionCreate" [color="black", fontcolor="black", label=<{SessionCreate|is_deleted : bool<br ALIGN="LEFT"/>is_private_session : bool<br ALIGN="LEFT"/>session_name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.chat.SessionData" [color="black", fontcolor="black", label=<{SessionData|is_private_session : bool<br ALIGN="LEFT"/>session_id : str<br ALIGN="LEFT"/>session_name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.chat.SessionUpdate" [color="black", fontcolor="black", label=<{SessionUpdate|is_deleted : bool<br ALIGN="LEFT"/>is_private_session : bool<br ALIGN="LEFT"/>session_name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.chunk_processor.SingleChunkProcessor" [color="black", fontcolor="black", label=<{SingleChunkProcessor|<br ALIGN="LEFT"/>|process(text: str): list[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.create_statistics_model.Statistics" [color="black", fontcolor="black", label=<{Statistics|total_documents : BigIntegerField<br ALIGN="LEFT"/>total_words : BigIntegerField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.tokenizer.SudachiTokenizer" [color="black", fontcolor="black", label=<{SudachiTokenizer|<br ALIGN="LEFT"/>|tokenize(text: str): list[str]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.domain.document_reader.TXTReader" [color="black", fontcolor="black", label=<{TXTReader|<br ALIGN="LEFT"/>|read_document(start_page_number: int): list[ChunkSourceInfo]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.create_term_model.Term" [color="black", fontcolor="black", label=<{Term|document_frequency : IntegerField<br ALIGN="LEFT"/>term : CharField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.repository.bm25.models.create_term_frequency_model.TermFrequency" [color="black", fontcolor="black", label=<{TermFrequency|document_id : ForeignKeyField<br ALIGN="LEFT"/>term : ForeignKeyField<br ALIGN="LEFT"/>term_frequency : IntegerField<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"ragpon.domain.document_reader.WordReader" [color="black", fontcolor="black", label=<{WordReader|<br ALIGN="LEFT"/>|read_document(start_page_number: int): list[ChunkSourceInfo]<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"ragpon.chunk_processor.FixedLengthChunkProcessor" -> "ragpon.chunk_processor.AbstractChunkProcessor" [arrowhead="empty", arrowtail="none"];
"ragpon.chunk_processor.JAGinzaChunkProcessor" -> "ragpon.chunk_processor.AbstractChunkProcessor" [arrowhead="empty", arrowtail="none"];
"ragpon.chunk_processor.NaturalChunkProcessor" -> "ragpon.chunk_processor.AbstractChunkProcessor" [arrowhead="empty", arrowtail="none"];
"ragpon.chunk_processor.SingleChunkProcessor" -> "ragpon.chunk_processor.AbstractChunkProcessor" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_processing_pipeline.DataFrameDocumentProcessingPipeline" -> "ragpon.domain.document_processing_pipeline.AbstractDocumentProcessingPipeline" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_processing_pipeline.DataFrameProcessingError" -> "ragpon.domain.document_processing_pipeline.DocumentProcessingError" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_processing_pipeline.FilePathDocumentProcessingPipeline" -> "ragpon.domain.document_processing_pipeline.AbstractDocumentProcessingPipeline" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_processing_pipeline.FileProcessingError" -> "ragpon.domain.document_processing_pipeline.DocumentProcessingError" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_processing_pipeline.MetadataGenerationError" -> "ragpon.domain.document_processing_pipeline.DocumentProcessingError" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_processing_pipeline.RowProcessingError" -> "ragpon.domain.document_processing_pipeline.DataFrameProcessingError" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_reader.ExtensionBasedDocumentReaderFactory" -> "ragpon.domain.document_reader.AbstractDocumentReaderFactory" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_reader.HTMLReader" -> "ragpon.domain.document_reader.AbstractDocumentReader" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_reader.PDFReaderPyMuPDF" -> "ragpon.domain.document_reader.AbstractDocumentReader" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_reader.PDFReaderPyPDF" -> "ragpon.domain.document_reader.AbstractDocumentReader" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_reader.PowerPointReader" -> "ragpon.domain.document_reader.AbstractDocumentReader" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_reader.TXTReader" -> "ragpon.domain.document_reader.AbstractDocumentReader" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.document_reader.WordReader" -> "ragpon.domain.document_reader.AbstractDocumentReader" [arrowhead="empty", arrowtail="none"];
"ragpon.domain.metadata_generator.CustomMetadataGenerator" -> "ragpon.domain.metadata_generator.AbstractMetadataGenerator" [arrowhead="empty", arrowtail="none"];
"ragpon.ml_models.embedding_model.CosineSimilarityCalculator" -> "ragpon.ml_models.embedding_model.AbstractSimilarityCalculator" [arrowhead="empty", arrowtail="none"];
"ragpon.ml_models.embedding_model.MultilingualE5LargeEmbedder" -> "ragpon.ml_models.embedding_model.AbstractEmbeddingModel" [arrowhead="empty", arrowtail="none"];
"ragpon.ml_models.embedding_model.RuriLargeEmbedder" -> "ragpon.ml_models.embedding_model.AbstractEmbeddingModel" [arrowhead="empty", arrowtail="none"];
"ragpon.ml_models.embedding_model.RuriLargeEmbedderCTranslate2" -> "ragpon.ml_models.embedding_model.AbstractEmbeddingModel" [arrowhead="empty", arrowtail="none"];
"ragpon.ml_models.large_language_model.Mixtral8x7BInstructV01" -> "ragpon.ml_models.large_language_model.AbstractLargeLanguageModel" [arrowhead="empty", arrowtail="none"];
"ragpon.ml_models.reranker.JapaneseRerankerCrossEncoderLargeV1Evaluator" -> "ragpon.ml_models.reranker.AbstractRelevanceEvaluator" [arrowhead="empty", arrowtail="none"];
"ragpon.ml_models.reranker.RuriRerankerLargeEvaluator" -> "ragpon.ml_models.reranker.AbstractRelevanceEvaluator" [arrowhead="empty", arrowtail="none"];
"ragpon.repository.bm25.bm25_repository.BM25Repository" -> "ragpon.repository.abstract_repository.AbstractRepository" [arrowhead="empty", arrowtail="none"];
"ragpon.repository.chromaDB_repository.ChromaDBRepository" -> "ragpon.repository.abstract_repository.AbstractRepository" [arrowhead="empty", arrowtail="none"];
"ragpon.repository.search_results_formatter.ChromaDBResultsFormatter" -> "ragpon.repository.search_results_formatter.AbstractResultsFormatter" [arrowhead="empty", arrowtail="none"];
"ragpon.tokenizer.SudachiTokenizer" -> "ragpon.tokenizer.AbstractTokenizer" [arrowhead="empty", arrowtail="none"];
"ragpon.chunk_processor.JAGinzaChunkProcessor" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_chunk_processor", style="solid"];
"ragpon.config.config.Config" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_config", style="solid"];
"ragpon.domain.chat.RoleEnum" -> "ragpon.domain.chat.Message" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="role", style="solid"];
"ragpon.domain.document_reader.ExtensionBasedDocumentReaderFactory" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_reader_factory", style="solid"];
"ragpon.domain.domain.BaseDocument" -> "ragpon.domain.domain.Document" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="base_document", style="solid"];
"ragpon.domain.metadata_generator.CustomMetadataGenerator" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_metadata_generator", style="solid"];
"ragpon.ml_models.embedding_model.MultilingualE5LargeEmbedder" -> "ragpon.service.document_processing_service.DatabaseFactory" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_embedder", style="solid"];
"ragpon.ml_models.reranker.JapaneseRerankerCrossEncoderLargeV1Evaluator" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_relevance_evaluator", style="solid"];
"ragpon.repository.bm25.bm25_calculators.BM25PlusCalculator" -> "ragpon.repository.bm25.bm25_repository.BM25Repository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_bm_calculator", style="solid"];
"ragpon.repository.bm25.bm25_repository.BM25Repository" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_bm25_repo", style="solid"];
"ragpon.repository.bm25.managers.DocumentManager" -> "ragpon.repository.bm25.bm25_repository.BM25Repository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_doc_manager", style="solid"];
"ragpon.repository.bm25.managers.IndexManager" -> "ragpon.repository.bm25.bm25_repository.BM25Repository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_index_manager", style="solid"];
"ragpon.repository.bm25.models.DataModels" -> "ragpon.repository.bm25.bm25_repository.BM25Repository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_models", style="solid"];
"ragpon.repository.bm25.models.create_statistics_model.Statistics" -> "ragpon.repository.bm25.models.DataModels" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="Statistics", style="solid"];
"ragpon.repository.bm25.models.create_term_frequency_model.TermFrequency" -> "ragpon.repository.bm25.models.DataModels" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="TermFrequency", style="solid"];
"ragpon.repository.bm25.models.create_term_model.Term" -> "ragpon.repository.bm25.models.DataModels" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="Term", style="solid"];
"ragpon.repository.chromaDB_repository.ChromaDBRepository" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_chromadb_repo", style="solid"];
"ragpon.repository.search_results_formatter.ChromaDBResultsFormatter" -> "ragpon.repository.chromaDB_repository.ChromaDBRepository" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="formatter", style="solid"];
"ragpon.service.document_processing_service.DatabaseFactory" -> "ragpon.service.document_processing_service.DocumentProcessingService" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_factory", style="solid"];
"ragpon.tokenizer.SudachiTokenizer" -> "ragpon.service.document_processing_service.DatabaseFactory" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="_tokenizer", style="solid"];
"ragpon.chunk_processor.AbstractChunkProcessor" -> "ragpon.domain.document_processing_pipeline.FilePathDocumentProcessingPipeline" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="chunk_processor", style="solid"];
"ragpon.config.config.Config" -> "ragpon.service.document_processing_service.DatabaseFactory" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_config", style="solid"];
"ragpon.ml_models.embedding_model.AbstractEmbeddingModel" -> "ragpon.ml_models.embedding_model.ChromaDBEmbeddingAdapter" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="embedding_model", style="solid"];
"ragpon.ml_models.embedding_model.AbstractEmbeddingModel" -> "ragpon.ml_models.embedding_model.CosineSimilarityCalculator" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="embedding_model", style="solid"];
"ragpon.ml_models.embedding_model.ChromaDBEmbeddingAdapter" -> "ragpon.repository.chromaDB_repository.ChromaDBRepository" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="embed_func", style="solid"];
"ragpon.ml_models.reranker.AbstractRelevanceEvaluator" -> "ragpon.ml_models.reranker.Reranker" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="relevance_evaluator", style="solid"];
"ragpon.repository.bm25.managers.IndexManager" -> "ragpon.repository.bm25.managers.DocumentManager" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_index_manager", style="solid"];
"ragpon.repository.bm25.models.DataModels" -> "ragpon.repository.bm25.bm25_calculators.BM25PlusCalculator" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_data_models", style="solid"];
"ragpon.repository.bm25.models.DataModels" -> "ragpon.repository.bm25.managers.DocumentManager" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_data_models", style="solid"];
"ragpon.repository.bm25.models.DataModels" -> "ragpon.repository.bm25.managers.IndexManager" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_DataModels", style="solid"];
"ragpon.tokenizer.AbstractTokenizer" -> "ragpon.repository.bm25.bm25_calculators.BM25PlusCalculator" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_tokenizer", style="solid"];
"ragpon.tokenizer.AbstractTokenizer" -> "ragpon.repository.bm25.bm25_repository.BM25Repository" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_tokenizer", style="solid"];
"ragpon.tokenizer.AbstractTokenizer" -> "ragpon.repository.bm25.managers.DocumentManager" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="_tokenizer", style="solid"];
}
